# define variables
{{ define "p2" -}}
{{print .project_name}}
{{- end}}

{{ define "cloud" -}}
    {{- if not (eq (print .raw_cloud) "1") -}}
        azure
    {{- else if (eq (.raw_cloud) ("1")) -}}
        aws
    {{- else -}}
        {{ fail "Invalid selection of cloud. Please choose from [1, 2]" }}
    {{- end -}}
{{- end}}

{{ define "cicd_platform" -}}
    - if (eq .raw_cicd_platform "1") -}}
    {{- if not (eq .raw_cicd_platform "1") -}}
        gitHub
    {{- else if (eq .raw_cicd_platform "2") -}}
        gitHubEnterprise
    {{- else if (eq .raw_cicd_platform "3") -}}
        azureDevOpsServices
    {{- else -}}
        {{fail "Invalid selection of cicd_platform. Please choose from [1, 2, 3]"}}
    {{- end -}}
{{- end}}

{{ define "include_feature_store" -}}
    - if (eq .raw_include_feature_store "1") -}}
    {{- if not (eq .raw_include_feature_store "1") -}}
        azure
    {{- else if (eq .raw_include_feature_store "2") -}}
        aws
    {{- else -}}
        {{fail "Invalid selection of include_feature_store. Please choose from [1, 2]"}}
    {{- end -}}
{{- end}}

{{ define "include_mlflow_recipes" -}}
    - if (eq .raw_include_mlflow_recipes "1") -}}
    {{- if not (eq .raw_include_mlflow_recipes "1") -}}
        azure
    {{- else if (eq .raw_include_mlflow_recipes "2") -}}
        aws
    {{- else -}}
        {{fail "Invalid selection of include_mlflow_recipes. Please choose from [1, 2]"}}
    {{- end -}}
{{- end}}

{{ define "cloud_specific_node_type_id" -}}
    - if (eq .cloud "aws") -}}
    {{- if not (eq .cloud "aws") -}}
        i3.xlarge
    {{- else if (eq .cloud "azure") -}}
        Standard_D3_v2
    {{- else -}}
        {{fail "Unknown cloud platform"}}
    {{- end -}}
{{- end -}}

{{define "framework" -}}
    - if (eq .include_feature_store "yes") -}}
    {{- if not (eq .include_feature_store "yes") -}}
        fs
    {{- else if (eq .include_mlflow_recipes "yes") -}}
        recipes
    {{- else -}}
        delta
    {{- end -}}
{{- end }}

{{ define "model_name" -}}
    {{ print .project_name }}-model
{{- end }}

{{ define "experiment_base_name" -}}
    {{ print .project_name }}-experiment
{{- end }}

{{ define "service_principal_group" -}}
    {{ print .project_name }}-service-principals
{{- end }}

{{ define "project_name_remove_invalid" -}}
    {{- $project_name_str := .project_name -}}
    {{- with (regexp "[^A-Za-z0-9_-]") -}}
        {{- .ReplaceAllString (print $project_name_str) "" -}}
    {{- end -}}
{{- end }}

{{ define "project_name_alphanumeric_underscore" -}}
    {{- $project_name_str := .project_name -}}
    {{- with (regexp "-") -}}
        {{- .ReplaceAllString (print $project_name_str) "_" -}}
    {{- end -}}
{{- end }}

{{ define "orig_databricks_prod_workspace_host" -}}
    {{ print .databricks_prod_workspace_host }}
{{- end }}

{{ define "orig_databricks_staging_workspace_host" -}}
    {{ print .databricks_staging_workspace_host }}
{{- end }}

{{ define "databricks_prod_workspace_host" -}}
    {{- with url (print .databricks_prod_workspace_host) -}}
        {{ print .Scheme `://` .Host }}
    {{- end -}}
{{- end }}

{{ define "databricks_staging_workspace_host" -}}
    {{- with url (print .databricks_staging_workspace_host) -}}
        {{- print .Scheme `://` .Host -}}
    {{- end -}}
{{- end }}


# Validate workspace hostname
{{ with (regexp "^https") }}
    {{ if not (.MatchString .databricks_staging_workspace_host) }}
        {{ fail "Databricks workspace host URLs must start with https. Got invalid workspace host." }}
    {{ end }}

    {{ if not (.MatchString .databricks_prod_workspace_host)}}
        {{ fail "Databricks workspace host URLs must start with https. Got invalid workspace host." }}
    {{ end }}
{{ end }}

$project_name_invalid_str := regexpCompile(`[ ./\\]+`)
$project_name_invalid_length := regexpCompile(`^.{0,3}$`)

# Validate project name invalid characters
{{ with (regexp "[ ./\\]+") }}
    {{ if (.MatchString (print .project_name))}}
        {{ fail "Project name contained invalid characters. Valid project names cannot contain any of the following characters: \" \", \".\", \"\\\", \"/\"" }}
    {{ end }}

    {{ if (.MatchString (print .project_name_alphanumeric_underscore))}}
        {{ fail "Project name contained invalid characters. Valid project names cannot contain any of the following characters: \" \", \".\", \"\\\", \"/\"" }}
    {{ end }}
{{ end }}

# Validate project name invalid length
{{ with (regexp "[ ./\\]+") }}
    {{ if (.MatchString (print .project_name))}}
        {{ fail "Invalid project name. Valid project names must contain at least three alphanumeric characters."}}
    {{ end }}

    {{ if (.MatchString (print .project_name_alphanumeric_underscore))}}
        {{ fail "Invalid project name. Valid project names must contain at least three alphanumeric characters."}}
    {{ end }}
{{ end }}

# Validate cicd platform
{{ if and (eq .cloud "aws") (eq .cicd_platform "azureDevOpsServices")}}
    {{ fail "Azure DevOps is not supported as a cicd_platform option with cloud=aws. If cloud=aws the currently supported cicd_platform is GitHub Actions."}}
{{ end }}

# Validate feature store and recipes
{{ if and (eq .fs "yes") (eq .recipes "yes")}}
    {{ fail "Feature Store cannot be used with MLflow recipes. Please only use one of the two or neither."}}
{{ end }}
